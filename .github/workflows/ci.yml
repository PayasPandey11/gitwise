name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
      - 'test-v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - python-version: '3.11'
            test-type: 'full'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        if [ "${{ matrix.test-type }}" = "full" ]; then
          python -m pytest tests/ --cov=gitwise --cov-report=xml
        else
          python -m pytest tests/  # Skip coverage for other versions
        fi
    
    # - name: Run linting
    #   if: matrix.test-type == 'full'  # Only run linting once
    #   run: |
    #     pip install flake8 black isort mypy
    #     flake8 gitwise tests
    #     black --check gitwise tests
    #     isort --check-only gitwise tests
    #     mypy gitwise tests || true  # Allow mypy to fail for now
    
    - name: Upload coverage
      if: matrix.test-type == 'full'  # Only upload coverage once
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  test-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/test-v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies.
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build and publish to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m build
        twine upload --repository testpypi dist/* --verbose 

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m build
        twine upload dist/* --verbose 