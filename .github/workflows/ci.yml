name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']  # Latest stable version for primary testing
        include:
          - python-version: '3.8'  # Minimum supported version
            test-type: 'min-version'
          - python-version: '3.11'
            test-type: 'full'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        if [ "${{ matrix.test-type }}" = "full" ]; then
          python -m pytest tests/ --cov=gitwise --cov-report=xml
        else
          python -m pytest tests/  # Skip coverage for min version
        fi
    
    - name: Run linting
      if: matrix.test-type == 'full'  # Only run linting once
      run: |
        pip install flake8 black isort mypy
        flake8 gitwise tests
        black --check gitwise tests
        isort --check-only gitwise tests
        mypy gitwise tests
    
    - name: Upload coverage
      if: matrix.test-type == 'full'  # Only upload coverage once
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m build
        twine upload dist/* 